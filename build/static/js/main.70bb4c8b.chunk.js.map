{"version":3,"sources":["ContextApi/BaseContext.js","ContextApi/UseBaseContext.js","ContextApi/UrlCall.js","Component/BrandLogo.js","Utility/Constants.js","Pages/Header.js","Component/MainForm.js","Component/WarnIcon.js","Utility/Utility.js","Component/Table.js","Component/MainTable.js","Component/DefaultImg.js","Pages/Home.js","App.js","serviceWorker.js","index.js"],"names":["BaseContext","React","createContext","BaseContextProvider","props","useState","movies","show","filter","search","state","setState","Provider","value","children","UseBaseContext","useContext","setData","data","customDataObj","getData","UrlCall","BASE_URL","postCall","url","params","method","console","log","Promise","resolve","reject","Axios","then","promise","getCall","get","BrandLogo","xmlns","viewBox","fill","d","STATUS_INIT","STATUS_PROCESS","STATUS_TRANSACTION","Header","UriCall","className","onClick","window","location","reload","onChange","e","resp","MainForm","localData","setLocaldata","disabled","type","company","target","placeholder","csv","rows","param","text","DefaultImg","height","width","convertPrice","price","parseFloat","split","join","Table","modalVisibility","setModalVisibility","confirmModalVisibility","setConfirmModalVisibility","closeModal","closeConfirmDialog","clickStatus","row","key","selectedRow","fromDate","cells","cleanedValue","toDate","details","balance","amount","id","index","ignore","tblData","onClose","transitionSpeed","defaultValue","newData","item","border","map","replace","apply","WarnIcon","MainTable","date","src","Home","status","App","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.70bb4c8b.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nconst BaseContext = React.createContext([{}, () => { }]);\n\nconst BaseContextProvider = (props) => {\n    const [state, setState] = useState({\n        movies: [],//all the movies\n        show: [],//currently shown movies\n        filter: [],\n        search: '',\n    });\n\n    return (\n        <BaseContext.Provider value={[state, setState]}>\n            {props.children}\n        </BaseContext.Provider>\n    );\n};\n\nexport { BaseContext, BaseContextProvider };","import { useContext } from 'react';\nimport { BaseContext } from './BaseContext'\n\nconst UseBaseContext = () => {\n    const [state, setState] = useContext(BaseContext);\n\n    function setData(data, customDataObj) {\n        setState(state => ({\n            ...state, [customDataObj]: data\n        }));\n    }\n\n    function getData(customDataObj) {\n        return state[customDataObj];\n    }\n    return {\n        setData,\n        getData,\n    }\n}\n\n\nexport default UseBaseContext;","import Axios from 'axios'\nimport UseBaseContext from './../ContextApi/UseBaseContext'\n\nfunction UrlCall() {\n    const { setData, getData } = UseBaseContext();\n    let companyName = 'apple';\n\n    const BASE_URL = 'https://bokiotestbankapi.azurewebsites.net/api/' + companyName + '/Transactions/';\n\n    function getCall() {\n        let url = BASE_URL;\n        return new Promise((resolve, reject) => {\n            Axios.get(url).then((promise) => {\n                resolve(promise.data);\n            });\n        })\n    };\n\n\n    function postCall(data, url) {\n        url = BASE_URL + url;\n        let params = {\n            method: 'post',\n            url,\n            data\n        };\n        console.log(params);\n        return new Promise((resolve, reject) => {\n            Axios(\n                params\n            ).then((promise) => {\n                resolve(promise.data);\n            });\n        })\n    }\n\n\n    return {\n        postCall,\n        getCall\n    }\n}\n\nexport default UrlCall;","\n\nimport React, { useState, useEffect, setState } from 'react'\nimport UseBaseContext from '../ContextApi/UseBaseContext'\nimport UriCall from '../ContextApi/UrlCall'\n\nfunction BrandLogo() {\n\n\n    /* all of the maon content goes here  */\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 669 198\">\n            <g fill=\"#28cdaa\">\n                <path d=\"M527.699 47.477h22.932V149.07h-22.932zM284.515 94.673c7.866-4.666 11.732-11.066 11.732-19.198 0-5.333-1.066-9.866-3.333-13.6-2.133-3.6-5.2-6.666-9.2-8.932-3.866-2.267-8.532-3.867-13.998-4.8-5.467-.933-11.333-1.333-17.866-1.333-4.8 0-10 .267-15.599.667-5.6.4-10.666 1.066-15.332 2v98.526c6 1.334 11.732 2.133 17.199 2.4 5.466.4 11.066.533 16.665.533 15.333 0 26.932-2.666 34.665-8 7.733-5.332 11.599-13.332 11.599-23.998 0-5.332-1.2-9.999-3.466-14.265-2.134-4.267-6.533-7.6-13.066-10zm-41.198-28.931a338.24 338.24 0 0 1 6-.4c2.267 0 4.4-.133 6.266-.133 6 0 10.666.8 13.733 2.533 3.066 1.6 4.666 4.533 4.666 8.666 0 4-1.466 6.933-4.533 8.666-3.066 1.867-8 2.667-15.066 2.667h-11.199V65.742zm28.532 63.462c-4.266 2-9.733 2.934-16.532 2.934-2.4 0-4.533 0-6.4-.134-2-.133-3.733-.266-5.466-.4V105.34h14.399c6.533 0 11.6 1.067 15.066 3.067 3.466 2 5.332 5.333 5.332 10-.133 5.332-2.266 8.932-6.4 10.798zM399.44 59.21c-4.532-4.534-9.999-7.867-16.132-10.134-6.133-2.266-12.666-3.333-19.598-3.333-6.8 0-13.2 1.067-19.333 3.333-6.132 2.267-11.465 5.6-16.132 10.133-4.666 4.533-8.4 10-11.066 16.666-2.8 6.533-4.133 14.265-4.133 22.931 0 8.667 1.333 16.4 4 22.932 2.666 6.533 6.266 12.133 10.8 16.533 4.532 4.4 9.999 7.732 16.132 9.999 6.132 2.266 12.665 3.333 19.598 3.333 7.066 0 13.866-1.067 19.999-3.333 6.266-2.267 11.6-5.6 15.999-10 4.533-4.4 8-9.999 10.666-16.532 2.533-6.533 3.866-14.265 3.866-22.932 0-8.666-1.333-16.398-4-22.931-2.533-6.667-6.132-12.266-10.665-16.666zm-10.665 53.062c-1.2 4-2.934 7.466-5.333 10.4-2.267 2.933-5.2 5.066-8.533 6.666-3.333 1.6-7.2 2.4-11.333 2.4-4.266 0-8.133-.8-11.466-2.4-3.333-1.6-6.133-3.733-8.4-6.666-2.266-2.934-3.999-6.267-5.332-10.4-1.2-4-1.867-8.533-1.867-13.466s.667-9.332 1.867-13.465c1.2-4 2.933-7.466 5.333-10.4 2.266-2.933 5.066-5.066 8.4-6.8 3.332-1.732 7.066-2.399 11.465-2.399 4.267 0 8 .8 11.333 2.4 3.333 1.6 6.266 3.733 8.533 6.666 2.266 2.933 4 6.4 5.333 10.4 1.2 4 1.866 8.532 1.866 13.598 0 5.067-.666 9.467-1.866 13.466zM665.29 75.741c-2.667-6.533-6.266-12.132-10.8-16.665-4.532-4.533-9.999-7.866-16.132-10.133-6.133-2.266-12.666-3.333-19.598-3.333-6.8 0-13.2 1.067-19.333 3.333-6.132 2.267-11.465 5.6-16.132 10.133-4.666 4.533-8.4 10-11.066 16.665-2.8 6.533-4.133 14.266-4.133 22.932 0 8.666 1.333 16.4 4 22.932 2.666 6.533 6.266 12.133 10.8 16.532 4.532 4.4 9.999 7.733 16.132 10 6.132 2.266 12.665 3.333 19.598 3.333 7.066 0 13.866-1.067 19.999-3.333 6.266-2.267 11.6-5.6 15.999-10 4.533-4.4 8-10 10.666-16.532 2.533-6.533 3.866-14.266 3.866-22.932.134-8.666-1.2-16.265-3.866-22.932zm-21.465 36.531c-1.2 4-2.934 7.466-5.333 10.4-2.267 2.933-5.2 5.066-8.533 6.666-3.333 1.6-7.2 2.4-11.333 2.4-4.266 0-8.133-.8-11.466-2.4-3.333-1.6-6.133-3.733-8.4-6.666-2.266-2.934-3.999-6.267-5.332-10.4-1.2-4-1.867-8.533-1.867-13.466s.667-9.332 1.867-13.465c1.2-4 2.933-7.466 5.333-10.4 2.266-2.933 5.066-5.066 8.4-6.8 3.332-1.6 7.066-2.399 11.465-2.399 4.267 0 8 .8 11.333 2.4 3.333 1.6 6.266 3.733 8.533 6.666 2.266 2.933 4 6.4 5.333 10.4 1.2 4 1.866 8.532 1.866 13.598 0 5.067-.666 9.467-1.866 13.466zM471.836 94.807a874.583 874.583 0 0 0 22.132-22.932c6.933-7.6 13.999-15.466 20.932-23.732H487.7c-5.2 5.733-10.799 12-16.798 18.799-6.133 6.8-12 13.199-17.866 19.332v-38.13h-22.932v101.592h22.932v-43.063c3.467 2.8 7.066 5.866 10.533 9.466 3.466 3.6 6.933 7.333 10.132 11.199 3.2 3.866 6.267 7.733 9.066 11.6 2.8 3.866 5.2 7.465 7.333 10.665H517.3a313.35 313.35 0 0 0-21.732-30.798c-7.733-9.2-15.6-17.199-23.732-23.998z\"></path>\n            </g>\n            <g fill=\"#48baa2\">\n                <path d=\"M99.327 98.673l99.46-99.327H0z\"></path>\n                <path d=\"M99.327 98.673L0-.654V198z\"></path>\n            </g>\n            <path fill=\"#75dfc9\" d=\"M99.327 98.673l99.46-99.327H0z\"></path>\n            <path fill=\"#48baa2\" d=\"M99.327 98.673L0-.654V198z\"></path>\n            <g>\n                <path fill=\"#368b7a\" d=\"M99.327 98.673L0 198h40.53z\"></path>\n                <path fill=\"#3ea18c\" d=\"M198.787 198l-99.46-99.327L40.53 198z\"></path>\n            </g>\n        </svg>\n    );\n}\n\nexport default BrandLogo;","export const STATUS_INIT = 1;\nexport const STATUS_PROCESS = 2;\nexport const STATUS_TRANSACTION = 3;","import React from 'react'\nimport BrandLogo from './../Component/BrandLogo'\nimport UseBaseContext from './../ContextApi/UseBaseContext'\nimport UriCall from './../ContextApi/UrlCall'\nimport {STATUS_TRANSACTION} from '../Utility/Constants'\nfunction Header() {\n    /* get the context instance */\n    const { setData, getData } = UseBaseContext();\n    const { getCall } = UriCall();\n    //handle the search click button\n    function companyChange(e) {\n        getCall('').then(function (resp) {\n            setData(resp, \"mainData\");\n            //changing the app status, based on which the content will load in home page\n            setData(STATUS_TRANSACTION, \"appStatus\");\n        });\n    }\n\n    const refresh = ()=>{\n        window.location.reload(false);\n    }\n\n    return (<>\n        <nav>\n            <ul>\n                <li className=\"icon\">\n                    <button className=\"btn-no-css\" onClick={refresh}>\n                    <BrandLogo />\n                    </button>\n                </li>\n                <li className=\"select-comp\">\n                    <select className=\"select-opt\" onChange={companyChange}>\n                        <option value=\"null\">None</option>\n                        <option value=\"apple\">Apple</option>\n                    </select>\n                </li>\n            </ul>\n        </nav>\n    </>);\n}\n\nexport default Header;","\n\nimport React, { useState, useEffect, setState } from 'react'\nimport UseBaseContext from './../ContextApi/UseBaseContext'\nimport UriCall from './../ContextApi/UrlCall'\nimport BrandLogo from './BrandLogo'\nimport { STATUS_INIT } from '../Utility/Constants'\nfunction MainForm() {\n    /* get the context instance */\n    const { setData, getData } = UseBaseContext();\n    const [localData, setLocaldata] = useState('');\n    const { postCall } = UriCall();\n\n    const onSubmit = () => {\n        /* make a POST query */\n        let param = {\n            text: localData.csv\n        }\n\n        postCall(param, 'Parse').then((resp) => {\n            setData(resp, \"parseData\");\n            //changing the app status, based on which the content will load in home page\n            setData(STATUS_INIT, \"appStatus\");\n\n            //set the companyname in the global variable\n            // setData(localData.company, \"company\");\n        });\n    }\n\n    /* all of the main content goes here  */\n    return (\n        <section className=\"main-form-copmponent\">\n            <div className=\"start-form\">\n                <div className=\"title-icon\">\n                    <BrandLogo />\n                </div>\n                <div className=\"detail-text\">\n                    Copy and paste your transaction from bank account, and let the magic begin!\n                            </div>\n\n                <div className=\"form-elems\">\n                    <div className=\"company-name\">\n                        <label className=\"block-display\">Company</label>\n                        <input disabled type=\"text\" value=\"apple\" onChange={(e) => { setLocaldata({ ...localData, company: e.target.value }) }} placeholder=\"Your beautiful company name.\"></input>\n                    </div>\n                    <div className=\"textarea\">\n                        <label className=\"block-display\">CSV Transaction text</label>\n                        <textarea onChange={(e) => { setLocaldata({ ...localData, csv: e.target.value }) }} rows=\"10\" placeholder=\"CSV text\" />\n                    </div>\n                    <div className=\"button-submit\">\n                        <button type=\"submit\" onClick={onSubmit} className=\"submit-btn\">Submit</button>\n                    </div>\n                </div>\n            </div>\n        </section >\n    );\n}\n\nexport default MainForm;","\n\nimport React, { useState, useEffect, setState } from 'react'\nimport UseBaseContext from '../ContextApi/UseBaseContext'\nimport UriCall from '../ContextApi/UrlCall'\n\nfunction DefaultImg() {\n\n\n    /* all of the maon content goes here  */\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"12pt\" viewBox=\"0 0 512 512\" width=\"12pt\"><path d=\"m512 256c0 68.109375-26.441406 132.210938-74.449219 180.5-47.980469 48.25-111.851562 75.058594-179.871093 75.488281-.167969 0-.351563.011719-.519532 0-.378906.011719-.769531.011719-1.160156.011719-68.371094 0-132.660156-26.621094-181.011719-74.980469-48.359375-48.347656-74.988281-112.640625-74.988281-181.019531s26.628906-132.660156 74.988281-181.019531c48.351563-48.351563 112.640625-74.980469 181.011719-74.980469.390625 0 .769531 0 1.160156.0117188.179688 0 .359375 0 .539063.0078124 68.011719.4414068 131.878906 27.2421878 179.851562 75.4921878 48.007813 48.289062 74.449219 112.386719 74.449219 180.488281zm0 0\" fill=\"#ff771a\" /><path d=\"m512 256c0 68.109375-26.441406 132.210938-74.449219 180.5-47.980469 48.25-111.851562 75.058594-179.871093 75.488281-.167969 0-.351563.011719-.519532 0v-511.9765622c.179688 0 .359375 0 .539063.0078124 68.011719.4414068 131.878906 27.2421878 179.851562 75.4921878 48.007813 48.289062 74.449219 112.386719 74.449219 180.488281zm0 0\" fill=\"#ff4a05\" /><path d=\"m257.265625 107.804688c.417969-.007813-.363281 0 0 0zm0 0\" /><path d=\"m299.921875 150.460938v114.4375c0 23.523437-19.132813 42.660156-42.652344 42.660156h-.109375c-10.988281-.320313-22.332031-4.757813-30.058594-12.488282-8.050781-8.058593-12.492187-18.769531-12.492187-30.171874v-114.4375c0-23.261719 19.3125-41.992188 42.550781-42.660157h.109375c23.519531 0 42.652344 19.140625 42.652344 42.660157zm0 0\" fill=\"#fff\" /><path d=\"m257.265625 307.5625c-.363281 0 .363281.007812 0 0zm0 0\" /><path d=\"m297.640625 361.640625c0 22.269531-18.109375 40.378906-40.378906 40.378906h-.101563c-22.210937-.050781-40.269531-18.140625-40.269531-40.378906 0-22.230469 18.058594-40.320313 40.269531-40.371094h.101563c22.269531 0 40.378906 18.109375 40.378906 40.371094zm0 0\" fill=\"#fff\" /><g fill=\"#ddebf0\"><path d=\"m297.640625 361.640625c0 22.269531-18.109375 40.378906-40.378906 40.378906h-.101563v-80.75h.101563c22.269531 0 40.378906 18.109375 40.378906 40.371094zm0 0\" /><path d=\"m299.921875 150.460938v114.4375c0 23.523437-19.132813 42.660156-42.652344 42.660156h-.109375v-199.757813h.109375c23.519531 0 42.652344 19.140625 42.652344 42.660157zm0 0\" /></g></svg>\n    );\n}\n\nexport default DefaultImg;","function limitString(string, limit) {\n    return string.substring(string, limit);\n}\n\nfunction convertPrice(price){\n    return parseFloat(price.split(\",\").join('.').split(\" \").join(''))\n}\n\nexport {\n    limitString,\n    convertPrice\n}","\n\nimport React, { useState, useEffect, setState } from 'react'\nimport UseBaseContext from './../ContextApi/UseBaseContext'\nimport UriCall from './../ContextApi/UrlCall'\nimport WarnIcon from './WarnIcon'\nimport { convertPrice } from './../Utility/Utility'\n\nimport Modal, { closeStyle } from 'simple-react-modal'\nimport { STATUS_PROCESS } from '../Utility/Constants'\n\nfunction Table() {\n    const [modalVisibility, setModalVisibility] = useState(false);\n    const [confirmModalVisibility, setConfirmModalVisibility] = useState(false);\n    const { setData, getData } = UseBaseContext();\n    const [localData, setLocaldata] = useState({});\n    const { postCall } = UriCall();\n    // const [formData, setFormData] = useState({});\n    const closeModal = () => {\n        setModalVisibility(false);\n    }\n\n    const closeConfirmDialog = () => {\n        setConfirmModalVisibility(false);\n    }\n\n    //handles the click function of an action item in a row\n    const clickStatus = (row, key) => {\n        let selectedRow = {\n            fromDate: row.cells[0].cleanedValue,\n            toDate: row.cells[1].cleanedValue,\n            details: row.cells[2].cleanedValue,\n            balance: row.cells[3].cleanedValue,\n            amount: row.cells[4].cleanedValue,\n            id: row.index,\n            key\n        };\n        //saving the data from temporarily\n        setData(selectedRow, \"selectedRow\");\n        setLocaldata(selectedRow);\n\n        //check if the data already existing\n        let param = {\n            \"transactions\": [\n                {\n                    \"id\": selectedRow.id,\n                    \"date\": selectedRow.fromDate,\n                    \"text\": selectedRow.details,\n                    \"amount\": parseFloat(convertPrice(selectedRow.amount))\n                }\n            ]\n        }\n        postCall(param, 'Preview').then((resp) => {\n            if (resp[0].ignore) {\n                setConfirmModalVisibility(true);\n            } else {\n                setModalVisibility(true);\n\n            }\n        });\n\n    }\n\n    //responsible for saving the reviewed data\n    const saveRowData = () => {\n        console.log(\"\", localData);\n        let param = [\n            {\n                \"id\": localData.id,\n                \"date\": localData.fromDate,\n                \"text\": localData.details,\n                \"amount\": parseFloat(convertPrice(localData.amount))\n            }\n        ];\n\n        postCall(param, '').then((resp) => {\n            setData(resp, \"mainData\");\n            setData(STATUS_PROCESS, \"appStatus\");\n            //close the modal\n            closeModal();\n\n            //remove from the suggestion data\n            let newData = getData(\"parseData\");\n            newData.rows = newData.rows.filter((item, key) => key != localData.key);\n            setData(newData, \"parseData\");\n        });\n    }\n\n    //use have confirmed that he/she wants to save the duplicate data\n    const confirmSaveDuplicate = () => {\n        setModalVisibility(true);\n        closeConfirmDialog(false);\n    }\n\n    //gettin all the data for the given table\n    let tblData = getData(\"parseData\");\n    /* all of the maon content goes here  */\n    return (\n        <section className=\"table-copmponent\">\n\n            <Modal show={modalVisibility} onClose={closeModal} transitionSpeed={500}>\n                <section className=\"modal-body\">\n                    <div className=\"modal-title\">Review</div>\n\n                    <div className=\"modal-form-elems\">\n                        <div className=\"company-name\">\n                            {/* <label className=\"block-display\">Date</label> */}\n                            <input onChange={(e) => { setLocaldata({ ...localData, fromDate: e.target.value }) }} defaultValue={localData.fromDate} type=\"text\" placeholder=\"date\"></input>\n                            <input onChange={(e) => { setLocaldata({ ...localData, details: e.target.value }) }} defaultValue={localData.details} type=\"text\" placeholder=\"descriprion\"></input>\n                            <input onChange={(e) => { setLocaldata({ ...localData, amount: e.target.value }) }} defaultValue={localData.amount} type=\"text\" placeholder=\"amount\"></input>\n\n                            <div className=\"button-submit\">\n                                <button type=\"submit\" onClick={saveRowData} className=\"submit-btn\">Submit</button>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            </Modal>\n            <Modal show={confirmModalVisibility} onClose={closeConfirmDialog} transitionSpeed={500}>\n                <section className=\"modal-body\">\n                    <div className=\"modal-title\">Data Already Existing</div>\n                    <p>Are you sure you want to continue?</p>\n                    <div className=\"modal-form-elems\">\n                        <div className=\"company-name\">\n\n                            <div className=\"button-submit\">\n                                <button type=\"submit\" onClick={confirmSaveDuplicate} className=\"submit-btn\">Yes</button>\n                                <button type=\"submit\" onClick={closeConfirmDialog} className=\"close-btn\">Close</button>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            </Modal>\n\n            <div className=\"process-page-left\">\n                <p className=\"title\">Suggestions</p>\n\n                <div className=\"processed-tbl\">\n                    <table border=\"1\" className=\"tbl tbl-standard\">\n                        <thead>\n                            <tr>\n                                <th>ID</th>\n                                <th>Balance Date</th>\n                                <th>Transaction Date</th>\n                                <th>Details</th>\n                                <th>Balance</th>\n                                <th>Amount</th>\n                                <th>Status</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n\n                            {tblData.rows.map((item, key) => (\n                                <tr key={key}>\n                                    <td>{item.index}</td>\n                                    <td className=\"text-small\">{item.cells[0].cleanedValue || 'NA'}</td>\n                                    <td className=\"text-small\">{item.cells[1].cleanedValue || 'NA'}</td>\n                                    <td>{item.cells[2].cleanedValue || 'NA'}</td>\n                                    <td>{item.cells[3].cleanedValue.replace(/ /g, '') || 'NA'}</td>\n                                    <td>{item.cells[4].cleanedValue.replace(/ /g, '') || 'NA'}</td>\n                                    <td>\n                                        <button className='btn-no-css' onClick={() => clickStatus.apply(this, [item, key])}>  <WarnIcon /></button>\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </section >\n    );\n}\n\nexport default Table;","\n\nimport React from 'react'\nimport UseBaseContext from '../ContextApi/UseBaseContext'\n\nfunction MainTable() {\n    const { setData, getData } = UseBaseContext();\n\n    //gettin all the data for the given table\n    let tblData = getData(\"mainData\");\n    /* all of the maon content goes here  */\n    return (\n        <section className=\"table-copmponent\">\n            <div className=\"process-page-left\">\n                <p className=\"title\">Final Data [Apple]</p>\n\n                <div className=\"processed-tbl\">\n                    <table border=\"1\" className=\"tbl tbl-standard\">\n                        <thead>\n                            <tr>\n                                <th>ID</th>\n                                <th>Date</th>\n                                <th>Description</th>\n                                <th>Amount</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n\n                            {tblData.map((item, key) => (\n                                <tr key={key}>\n                                    <td>{item.id}</td>\n                                    <td>{item.date}</td>\n                                    <td>{item.text}</td>\n                                    <td>{item.amount}</td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </section >\n    );\n}\n\nexport default MainTable;","\n\nimport React, { useState, useEffect, setState } from 'react'\nimport UseBaseContext from '../ContextApi/UseBaseContext'\nimport UriCall from '../ContextApi/UrlCall'\n\nfunction DefaultImg() {\n\n\n    /* all of the maon content goes here  */\n    return (\n        <section className=\"defaultimg-copmponent\">\n            <img className=\"left-img\" src=\"https://png2.cleanpng.com/sh/59b7cbbe1a4cd8efd56650679e778ad6/L0KzQYm3VsA2N5h4hJH0aYP2gLBuTfZqdpJze9tqbD3kc7T2lf51cZ9sRdNsY3B4fsXojwQubJZ4g59qY3Pog8T2kvlme146eqMCMUW0RIS4g8A5QV89SaQBOUe3RoK8UsgzO2o4UKI7MEO7PsH1h5==/kisspng-financial-accounting-accountant-desk-accessories-5b17151431c089.8126974615282393802038.png\" />\n        </section >\n    );\n}\n\nexport default DefaultImg;","import React from 'react'\nimport UseBaseContext from './../ContextApi/UseBaseContext'\nimport MainForm from './../Component/MainForm'\nimport Table from './../Component/Table'\nimport MainTable from './../Component/MainTable'\nimport DefaultImg from '../Component/DefaultImg'\nimport {STATUS_INIT, STATUS_PROCESS, STATUS_TRANSACTION} from '../Utility/Constants'\n\n\nfunction Home() {\n    /* get the context instance */\n    const { getData } = UseBaseContext();\n\n    let status = getData(\"appStatus\");\n    // console.log(\"status\", status);\n    /* all of the maon content goes here  */\n    return (\n        <section className=\"home-page\">\n            <div className=\"main-container\">\n                { /* All great things starts from here */}\n                <div className=\"outer\">\n\n                    <div className=\"half\">\n                        {status === STATUS_INIT || status === STATUS_PROCESS ? <Table /> : <DefaultImg />}\n                    </div>\n                    <div className=\"half\">\n                        {status === STATUS_PROCESS || status === STATUS_TRANSACTION ? <MainTable /> : <MainForm />}\n                    </div>\n                </div>\n            </div>\n        </section >\n    );\n}\n\nexport default Home;","import React from 'react';\nimport './App.css';\nimport Header from './Pages/Header'\nimport Home from './Pages/Home'\nimport Landing from './Pages/Landing'\nimport Process from './Pages/Process'\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n} from 'react-router-dom';\n\nimport { BaseContextProvider } from './ContextApi/BaseContext'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BaseContextProvider>\n      <Header />\n        <Home />\n        {/* <Process /> */}\n        {/* <Landing /> */}\n        {/* <Router>\n          <Header />\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n          </Switch>\n        </Router> */}\n      </BaseContextProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}